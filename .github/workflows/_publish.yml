name: Publish Docker Image

run-name: |
  Publish ${{ github.workflow }} image: ${{ inputs.registry }}/${{ inputs.image }}

on:
  workflow_call:
    inputs:
      artifact_name:
        type: string
        required: true
        description: artifact name to download docker iamge from
      registry:
        type: string
        required: true
        description: docker registry to publish to
      image:
        type: string
        required: true
        description: docker image to tag the image as

    secrets:
      username:
        required: true
        description: The docker username to login with
      password:
        required: true
        description: The docker password to login with

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download Docker image from build
        id: image
        uses: ./.github/actions/download-docker
        with:
          artifact_name: ${{ inputs.artifact_name }}

      - shell: bash
        run: |
          docker system info
          cat ~/.docker/config.json

      - name: Login
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}

      - name: Push the produciton image
        shell: bash
        run: |
          # The tag for the image from the downloaded artifact
          download_tag="${{ steps.image.outputs.tag }}"

          # The tag for the image to be published in the registry
          registry="${{ inputs.registry }}"
          image="${{ inputs.image }}"
          version="${{ steps.image.outputs.version }}"
          # TODO: before enabling this in production we should remove -next
          publish_tag="$registry/$image:$version-next"

          echo "Tagging $download_tag -> $publish_tag"
          docker tag $download_tag $publish_tag

          echo "Pushing $publish_tag to $registry"
          docker push $publish_tag


name: Release Tag

on:
  # Runs when a release is published
  # Pushes a tagged image
  # That is deployed to the "staging/production" environments
  release:
    types: [published]
  # TODO REMOVE THIS BEFORE MERGING
  pull_request:

jobs:
  context:
    runs-on: ubuntu-latest

    outputs:
      is_fork: ${{ steps.context.outputs.is_fork }}
      is_release_tag: ${{ steps.context.outputs.is_release_tag }}
      version: ${{ github.event.release.tag_name }}

    steps:
      - uses: actions/checkout@v4
      - id: context
        uses: ./.github/actions/context

  build_prod:
    needs: context
    uses: ./.github/workflows/_build.yml
    with:
      target: production
      version: ${{ needs.context.outputs.version }}

  build_dev:
    needs: context
    uses: ./.github/workflows/_build.yml
    with:
      target: development
      version: ${{ needs.context.outputs.version }}

  test:
    needs: build_dev
    uses: ./.github/workflows/_test.yml
    with:
      artifact_name: ${{ needs.build_dev.outputs.artifact_name }}

  test_main:
    needs: build_dev
    uses: ./.github/workflows/_test_main.yml
    with:
      artifact_name: ${{ needs.build_dev.outputs.artifact_name }}

  login:
    # TODO UNCOMMENT BEFORE MERGING
    # if: ${{ needs.context.outputs.is_release_tag == 'true' }}
    needs: context
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    outputs:
      access_token: ${{ steps.auth.outputs.access_token }}

    steps:
      - name: Get the GCP auth token
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          service_account: ${{ secrets.GAR_PUSHER_SERVICE_ACCOUNT_EMAIL }}
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          create_credentials_file: false

      - name: Login
        uses: docker/login-action@v3
        with:
          registry: us-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
          logout: false

  publish:
    # TODO UNCOMMENT BEFORE MERGING
    # if: ${{ needs.login.result == 'success' }}
    needs: [build_prod, login]
    uses: ./.github/workflows/_publish.yml
    secrets:
      username: oauth2accesstoken
      password: ${{ needs.login.outputs.access_token }}
    with:
      artifact_name: ${{ needs.build_prod.outputs.artifact_name }}
      registry: us-docker.pkg.dev
      image: ${{ github.repository }}


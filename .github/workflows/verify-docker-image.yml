name: Verify Docker Image

on:
  pull_request:
    branches:
      - master

env:
  PROCESS_COUNT: auto

jobs:
  verify_docker_image:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - id: build
        uses: ./.github/actions/build-docker
        with:
          target: development

      - name: Create failure
        id: failure
        uses: ./.github/actions/run-docker
        with:
          image: ${{ steps.build.outputs.image }}
          version: ${{ steps.build.outputs.version }}
          command: |
            exit 1
        continue-on-error: true
      - name: Verify failure
        if: always()
        run: |
          if [ "${{ steps.failure.outcome }}" -ne "failure" ]; then
            echo "Expected failure"
            exit 1
          fi

      - name: Check (special characters in command)
        uses: ./.github/actions/run-docker
        with:
          version: ${{ steps.build.outputs.version }}
          command: |
            echo 'this is a question?'
            echo 'a * is born'
            echo 'wow an array []'

      - name: Manage py check
        uses: ./.github/actions/run-docker
        with:
          version: ${{ steps.build.outputs.version }}
          command: |
            echo 'from olympia.lib.settings_base import *' > settings_local.py
            DJANGO_SETTINGS_MODULE='settings_local' python3 ./manage.py check

      - name: Installed packages
        uses: ./.github/actions/run-docker
        with:
          version: ${{ steps.build.outputs.version }}
          command: |
            pip show olympia

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - id: build
        uses: ./.github/actions/build-docker
        with:
          target: development

      - name: Run Test
        uses: ./.github/actions/run-docker
        with:
          version: ${{ steps.build.outputs.version }}
          up: ''
          command: |
            pytest \
              -n ${{ env.PROCESS_COUNT }} \
              -m 'not es_tests and not needs_locales_compilation and not static_assets and not internal_routes_allowed' \
              -v src/olympia/amo

  test_est_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - id: build
        uses: ./.github/actions/build-docker
        with:
          target: development

      - name: Pytest (es-testst)
        uses: ./.github/actions/run-docker
        with:
          version: ${{ steps.build.outputs.version }}
          up: ''
          command: |
              ./docker/healthcheck.mjs elastic 60

              # EStests seem to fail when using -n in github actions.
              pytest \
                -m 'es_tests and not needs_locales_compilation and not static_assets' \
                -v src/olympia/

  test_internal_routes_allowed:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - id: build
        uses: ./.github/actions/build-docker
        with:
          target: development

      - name: Pytest (internal_routes_allowed)
        uses: ./.github/actions/run-docker
        with:
          version: ${{ steps.build.outputs.version }}
          up: ''
          command: |
              # We need to change the setting in the file because we can't
              # override an env variable here, and the next command requires
              # `INTERNAL_ROUTES_ALLOWED` to be set to `True`.
              sed -i 's/^INTERNAL_ROUTES_ALLOWED.*/INTERNAL_ROUTES_ALLOWED=True/' settings_test.py
              pytest \
                -m 'internal_routes_allowed' \
                -v src/olympia/


  test_static_assets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - id: build
        uses: ./.github/actions/build-docker
        with:
          target: development

      - name: Static Assets
        uses: ./.github/actions/run-docker
        with:
          version: ${{ steps.build.outputs.version }}
          command: |
            pytest -m 'static_assets' -v src/olympia/
            make run_js_tests


  locales:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}

      - name: Build Docker image
        id: build
        uses: ./.github/actions/build-docker
        with:
          target: development

      - name: Extract Locales
        uses: ./.github/actions/run-docker
        with:
          version: ${{ steps.build.outputs.version }}
          compose_file: docker-compose.olympia.yml
          command: |
            make extract_locales

      - name: Push Locales (dry-run)
        shell: bash
        run: |
          if [[ ${{ github.event.pull_request.head.repo.fork}} == 'true' ]]; then
            echo """
            Github actions are not authorized to push from workflows triggered by forks.
            We cannot verify if the l10n extraction push will work or not.
            Please submit a PR from the base repository if you are modifying l10n extraction scripts.
            """

            exit 0
          fi

          make push_locales ARGS="--dry-run"

name: 'Docker Run Action'
description: 'Run a command in a new container'
inputs:
  artifact_name:
    description: 'The name of the artifact to download the image from'
    required: true
  run:
    description: 'Run command in container'
    required: true
  services:
    description: 'List of services to start'
    required: false
    default: 'web'
  compose_file:
    description: 'The docker-compose file to use'
    required: false
    default: 'docker-compose.yml:docker-compose.ci.yml'

runs:
  using: 'composite'
  steps:
    - id: id
      shell: bash
      run: |
        echo "id=$(id -u)" >> $GITHUB_OUTPUT

    - name: Run Docker Container
      shell: bash
      env:
        # We have already built the docker image
        # We can skip building and simply run the containers
        GH_RUN_ID: ${{ github.run_id }}
        GH_ARTIFACT_NAME: ${{ inputs.artifact_name }}
        DOCKER_TAG: ${{ inputs.tag }}
        COMPOSE_FILE: ${{ inputs.compose_file }}
        DOCKER_SERVICES: ${{ inputs.services }}
        HOST_UID: ${{ steps.id.outputs.id }}
      run: |
        # Start addons-server with the following inputs
        # DOCKER_TAG: ${{ inputs.tag }}
        # COMPOSE_FILE: ${{ inputs.compose_file }}
        # DOCKER_SERVICES: ${{ inputs.services }}
        # HOST_UID: ${{ steps.id.outputs.id }}
        make up

        # Exec the run command in the container
        # quoted 'EOF' to prevent variable expansion
        cat <<'EOF' | docker compose exec --user olympia web sh
          ${{ inputs.run }}
        EOF

    - name: Logs
      shell: bash
      if: failure()
      run: docker compose logs

name: 'Docker Run Action'
description: 'Run a command in docker compose web container'
inputs:
  command:
    description: 'The command to run in The container'
    required: true
  version:
    description: 'The version of the image to run'
    required: true
  up:
    description: 'Run docker compose up before running the command'
    required: false
    default: 'false'
  env:
    description: 'The environment variables to pass to the container'
    required: false
    default: ''
runs:
  using: 'composite'
  steps:
    - name: Export environment
      shell: bash
      run: |
        # Define environment variables needed for the docker-compose file
        make create_env_file DOCKER_VERSION="${{ inputs.version }}" UID=9500 GID=9500

        echo "${{ inputs.env }}" >> .env
        # Only use the base docker-compose file
        # Prevents building or mounting volumes.
        # Here we just want to pull the specified version and run the command
        echo "COMPOSE_FILE=docker-compose.yml:docker-compose.build.yml" >> .env

    - name: Docker Compose Up
      if: ${{ inputs.up == 'true' }}
      shell: bash
      run: |
        docker compose up -d --wait --remove-orphans --force-recreate --quiet-pull

    - name: Docker Compose Run
      shell: bash
      run: |
        cat <<EOF > exec.sh
          #!/bin/bash
          /data/olympia/docker/entrypoint.sh "${{ inputs.command }}"
        EOF

        chmod +x exec.sh

        if [[ "${{ inputs.up }}" == "true" ]]; then
          cat exec.sh | docker compose exec -u 0 web sh
        else
          cat exec.sh | docker compose run -u 0 --rm --remove-orphans --quiet-pull web sh
        fi

    - name: Logs
      shell: bash
      if: failure()
      run: docker compose logs

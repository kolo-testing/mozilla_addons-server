name: 'Docker Run Action'
description: 'Run a command in a new container'
inputs:
  version:
    description: 'The version of the image to run. '
    required: true
    default: 'local'
  digest:
    description: 'The build digest of the image to run. Overrides version.'
    required: true
    default: ''
  run:
    description: 'Run command in container'
    required: true
  compose_file:
    description: 'The docker-compose file to use'
    required: false
    default: 'docker-compose.yml'
  init_force_db:
    description: 'Force the initialization of the database'
    required: false
    default: ''
  init_skip_seed:
    description: 'Skip the seeding of the database'
    required: false
    default: 'true'
  init_skip_index:
    description: 'Skip the indexing of the database'
    required: false
    default: 'true'
runs:
  using: 'composite'
  steps:
    - id: id
      shell: bash
      run: |
        echo "id=$(id -u)" >> $GITHUB_OUTPUT

    - name: Run Docker Container
      shell: bash
      env:
        DOCKER_VERSION: ${{ inputs.version }}
        DOCKER_DIGEST: ${{ inputs.digest }}
        COMPOSE_FILE: ${{ inputs.compose_file }}
        HOST_UID: ${{ steps.id.outputs.id }}
        INIT_FORCE_DB: ${{ inputs.init_force_db }}
        INIT_SKIP_SEED: ${{ inputs.init_skip_seed }}
        INIT_SKIP_INDEX: ${{ inputs.init_skip_index }}

      run: |
        # Start the services
        make up

        # Exec the run command in the container
        # quoted 'EOF' to prevent variable expansion
        cat <<'EOF' | docker compose exec --user olympia web sh
          ${{ inputs.run }}
        EOF

    - name: Logs
      shell: bash
      if: ${{ inputs.logs }}
      run: docker compose logs

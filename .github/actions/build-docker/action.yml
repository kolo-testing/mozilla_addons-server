name: 'Docker Build'
description: 'Builds `addons-server` docker image'
inputs:
  password:
    required: false
    description: "Docker registry password"
    default: "invalid"
  push:
    required: false
    description: "Build and push image to registry"
    default: "false"
  python_version:
    required: false
    description: "Python version"
    default: "3.10"
  username:
    required: false
    description: "Docker registry username"
    default: "invalid"
  target:
    required: false
    description: "Build target"
    default: "development"

outputs:
  tags:
    description: "The Docker tags for the image"
    value: ${{ steps.meta.outputs.tags }}
  version:
    description: "The Docker version for the image"
    value: ${{ steps.meta.outputs.version }}

runs:
  using: "composite"
  steps:
    - name: Validate inputs
      shell: bash
      id: valid_inputs
      run: |
        if [[ "${{ inputs.push  }}" == "true" && "${{ github.ref }}" == "refs/heads/master" ]]; then
          echo "Cannot push to registry from master branch unless we migrate our master build job to GHA."
          exit 1
        fi

        if [[ "${{ inputs.target }}" != "development" && "${{ inputs.target }}" != "production" ]]; then
          echo "Invalid target: ${{ inputs.target }}"
          exit 1
        fi

        echo "DOCKER_IMAGE=mozilla/addons-server" >> $GITHUB_OUTPUT

    # Setup docker to build for multiple architectures
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest
        buildkitd-flags: --debug

    # Login to a registry to push the image
    - name: Login to Container Registry
      # Only login if we are pushing the image
      if: ${{ inputs.push == 'true' }}
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    # Determine the tags for the image
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ steps.valid_inputs.outputs.DOCKER_IMAGE }}
        tags: |
          type=schedule
          type=ref,event=tag
          type=ref,event=branch
          type=ref,event=pr
          # set latest tag for default branch
          # Disabled for now as we do not use this action for
          # The production build
          # type=raw,value=latest,enable={{is_default_branch}}

    - name: Export environment for docker compose
      shell: bash
      run: |
        # Set image name and tag for docker-compose.yml file
        echo "DOCKER_IMAGE=${{ steps.valid_inputs.outputs.DOCKER_IMAGE }}" >> $GITHUB_ENV
        echo "DOCKER_VERSION=${{ steps.meta.outputs.version }}" >> $GITHUB_ENV

    - name: Build Image
      uses: docker/bake-action@v4
      with:
        targets: web
        files: |
          docker-compose.yml
          docker-compose.build.yml
          ${{ steps.meta.outputs.bake-file-tags }}
          ${{ steps.meta.outputs.bake-file-annotations }}
          ${{ steps.meta.outputs.bake-file-labels }}
        pull: true
        push: ${{ inputs.push }}
        set: |
          *.target=${{ inputs.target }}
          *.cache-from=type=gha
          *.cache-to=type=gha,mode=max

# Generated by Django 4.2.13 on 2024-06-11 09:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import olympia.amo.models
import olympia.translations.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('versions', '0001_initial'),
        ('addons', '0001_initial'),
        ('translations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='addonuserpendingconfirmation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='addonuser',
            name='addon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='addons.addon'),
        ),
        migrations.AddField(
            model_name='addonuser',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='addonguid',
            name='addon',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='addons.addon'),
        ),
        migrations.AddField(
            model_name='addoncategory',
            name='addon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='addons.addon'),
        ),
        migrations.AddField(
            model_name='addonbrowsermapping',
            name='addon',
            field=models.ForeignKey(help_text='Add-on id this item will point to. If you do not know the id, paste the slug instead and it will be transformed automatically for you. You can also use the magnifying glass to see all the available add-ons if you have access to the add-on admin page.', on_delete=django.db.models.deletion.CASCADE, to='addons.addon'),
        ),
        migrations.AddField(
            model_name='addon',
            name='_current_version',
            field=models.ForeignKey(db_column='current_version', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='versions.version'),
        ),
        migrations.AddField(
            model_name='addon',
            name='authors',
            field=olympia.amo.models.FilterableManyToManyField(related_name='addons', through='addons.AddonUser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='addon',
            name='description',
            field=olympia.translations.fields.PurifiedField(blank=True, db_column='description', max_length=15000, null=True, on_delete=django.db.models.deletion.SET_NULL, require_locale=True, short=False, to='translations.PurifiedTranslation', to_field='id', unique=True),
        ),
        migrations.AddField(
            model_name='addon',
            name='developer_comments',
            field=olympia.translations.fields.PurifiedField(blank=True, db_column='developercomments', max_length=3000, null=True, on_delete=django.db.models.deletion.SET_NULL, require_locale=True, short=True, to='translations.PurifiedTranslation', to_field='id', unique=True),
        ),
        migrations.AddField(
            model_name='addon',
            name='eula',
            field=olympia.translations.fields.PurifiedField(blank=True, db_column='eula', max_length=350000, null=True, on_delete=django.db.models.deletion.SET_NULL, require_locale=True, short=True, to='translations.PurifiedTranslation', to_field='id', unique=True),
        ),
        migrations.AddField(
            model_name='addon',
            name='homepage',
            field=olympia.translations.fields.TranslatedField(blank=True, db_column='homepage', max_length=255, null=True, on_delete=django.db.models.deletion.SET_NULL, require_locale=True, short=True, to='translations.Translation', to_field='id', unique=True),
        ),
        migrations.AddField(
            model_name='addon',
            name='name',
            field=olympia.translations.fields.TranslatedField(blank=True, db_column='name', max_length=50, null=True, on_delete=django.db.models.deletion.SET_NULL, require_locale=True, short=True, to='translations.Translation', to_field='id', unique=True),
        ),
        migrations.AddField(
            model_name='addon',
            name='privacy_policy',
            field=olympia.translations.fields.PurifiedField(blank=True, db_column='privacypolicy', max_length=150000, null=True, on_delete=django.db.models.deletion.SET_NULL, require_locale=True, short=True, to='translations.PurifiedTranslation', to_field='id', unique=True),
        ),
        migrations.AddField(
            model_name='addon',
            name='summary',
            field=olympia.translations.fields.LinkifiedField(blank=True, db_column='summary', max_length=250, null=True, on_delete=django.db.models.deletion.SET_NULL, require_locale=True, short=True, to='translations.LinkifiedTranslation', to_field='id', unique=True),
        ),
        migrations.AddField(
            model_name='addon',
            name='support_email',
            field=olympia.translations.fields.TranslatedField(blank=True, db_column='supportemail', max_length=100, null=True, on_delete=django.db.models.deletion.SET_NULL, require_locale=True, short=True, to='translations.Translation', to_field='id', unique=True),
        ),
        migrations.AddField(
            model_name='addon',
            name='support_url',
            field=olympia.translations.fields.TranslatedField(blank=True, db_column='supporturl', max_length=255, null=True, on_delete=django.db.models.deletion.SET_NULL, require_locale=True, short=True, to='translations.Translation', to_field='id', unique=True),
        ),
        migrations.AddIndex(
            model_name='preview',
            index=models.Index(fields=['addon'], name='previews_addon_idx'),
        ),
        migrations.AddIndex(
            model_name='preview',
            index=models.Index(fields=['addon', 'position', 'created'], name='addon_position_created_idx'),
        ),
        migrations.AddIndex(
            model_name='migratedlwt',
            index=olympia.amo.models.LongNameIndex(fields=['static_theme'], name='migrated_personas_static_theme_id_fk_addons_id'),
        ),
        migrations.AddIndex(
            model_name='migratedlwt',
            index=olympia.amo.models.LongNameIndex(fields=['getpersonas_id'], name='migrated_personas_getpersonas_id'),
        ),
        migrations.AddField(
            model_name='deletedpreviewfile',
            name='disabled_addon_content',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='addons.disabledaddoncontent'),
        ),
        migrations.AddConstraint(
            model_name='addonuserpendingconfirmation',
            constraint=models.UniqueConstraint(fields=('addon', 'user'), name='addons_users_pending_confirmation_addon_id_user_id_38e3bb32_uniq'),
        ),
        migrations.AddIndex(
            model_name='addonuser',
            index=models.Index(fields=['listed'], name='addons_users_listed_idx'),
        ),
        migrations.AddIndex(
            model_name='addonuser',
            index=olympia.amo.models.LongNameIndex(fields=['addon', 'user', 'listed'], name='addons_users_addon_user_listed_idx'),
        ),
        migrations.AddIndex(
            model_name='addonuser',
            index=models.Index(fields=['addon', 'listed'], name='addons_users_addon_listed_idx'),
        ),
        migrations.AddConstraint(
            model_name='addonuser',
            constraint=models.UniqueConstraint(fields=('addon', 'user'), name='addons_users_addon_user'),
        ),
        migrations.AddIndex(
            model_name='addoncategory',
            index=models.Index(fields=['category_id', 'addon'], name='category_addon_idx'),
        ),
        migrations.AddConstraint(
            model_name='addoncategory',
            constraint=models.UniqueConstraint(fields=('addon', 'category_id'), name='addons_categories_addon_category_id'),
        ),
        migrations.AlterUniqueTogether(
            name='addonbrowsermapping',
            unique_together={('browser', 'extension_id')},
        ),
        migrations.AddIndex(
            model_name='addon',
            index=models.Index(fields=['bayesian_rating'], name='bayesianrating'),
        ),
        migrations.AddIndex(
            model_name='addon',
            index=models.Index(fields=['created'], name='addons_created_idx'),
        ),
        migrations.AddIndex(
            model_name='addon',
            index=models.Index(fields=['_current_version'], name='current_version'),
        ),
        migrations.AddIndex(
            model_name='addon',
            index=models.Index(fields=['disabled_by_user'], name='inactive'),
        ),
        migrations.AddIndex(
            model_name='addon',
            index=models.Index(fields=['hotness'], name='hotness_idx'),
        ),
        migrations.AddIndex(
            model_name='addon',
            index=models.Index(fields=['last_updated'], name='last_updated'),
        ),
        migrations.AddIndex(
            model_name='addon',
            index=models.Index(fields=['modified'], name='modified_idx'),
        ),
        migrations.AddIndex(
            model_name='addon',
            index=models.Index(fields=['status'], name='addons_status_idx'),
        ),
        migrations.AddIndex(
            model_name='addon',
            index=models.Index(fields=['target_locale'], name='target_locale'),
        ),
        migrations.AddIndex(
            model_name='addon',
            index=models.Index(fields=['type'], name='addontype_id'),
        ),
        migrations.AddIndex(
            model_name='addon',
            index=models.Index(fields=['weekly_downloads'], name='weeklydownloads_idx'),
        ),
        migrations.AddIndex(
            model_name='addon',
            index=models.Index(fields=['average_daily_users', 'type'], name='adus_type_idx'),
        ),
        migrations.AddIndex(
            model_name='addon',
            index=models.Index(fields=['bayesian_rating', 'type'], name='rating_type_idx'),
        ),
        migrations.AddIndex(
            model_name='addon',
            index=models.Index(fields=['created', 'type'], name='created_type_idx'),
        ),
        migrations.AddIndex(
            model_name='addon',
            index=models.Index(fields=['last_updated', 'type'], name='last_updated_type_idx'),
        ),
        migrations.AddIndex(
            model_name='addon',
            index=models.Index(fields=['modified', 'type'], name='modified_type_idx'),
        ),
        migrations.AddIndex(
            model_name='addon',
            index=models.Index(fields=['type', 'status', 'disabled_by_user'], name='type_status_inactive_idx'),
        ),
        migrations.AddIndex(
            model_name='addon',
            index=models.Index(fields=['weekly_downloads', 'type'], name='downloads_type_idx'),
        ),
        migrations.AddIndex(
            model_name='addon',
            index=models.Index(fields=['type', 'status', 'disabled_by_user', '_current_version'], name='visible_idx'),
        ),
        migrations.AddIndex(
            model_name='addon',
            index=models.Index(fields=['name', 'status', 'type'], name='name_2'),
        ),
    ]

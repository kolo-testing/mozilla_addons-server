# Generated by Django 4.2.13 on 2024-06-11 09:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import olympia.amo.fields
import olympia.amo.models
import olympia.translations.fields
import olympia.versions.fields
import olympia.versions.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('applications', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('abuse', '0003_initial'),
        ('addons', '0001_initial'),
        ('translations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DeniedInstallOrigin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('hostname_pattern', models.CharField(help_text='Hostname unix-style pattern to deny.', max_length=255, unique=True)),
                ('include_subdomains', models.BooleanField(default=False, help_text='Automatically check for subdomains of hostname pattern (Additional check with `*.` prepended to the original pattern).')),
            ],
            options={
                'get_latest_by': 'created',
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=(olympia.amo.models.SaveUpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', olympia.amo.fields.PositiveAutoField(primary_key=True, serialize=False)),
                ('builtin', models.PositiveIntegerField(default=0)),
                ('name', olympia.translations.fields.TranslatedField(blank=True, db_column='name', max_length=200, null=True, on_delete=django.db.models.deletion.SET_NULL, require_locale=True, short=True, to='translations.Translation', to_field='id', unique=True)),
                ('text', olympia.translations.fields.LinkifiedField(blank=True, db_column='text', max_length=75000, null=True, on_delete=django.db.models.deletion.SET_NULL, require_locale=True, short=True, to='translations.LinkifiedTranslation', to_field='id', unique=True)),
            ],
            options={
                'db_table': 'licenses',
            },
            bases=(olympia.amo.models.SaveUpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', olympia.amo.fields.PositiveAutoField(primary_key=True, serialize=False)),
                ('approval_notes', models.TextField(blank=True, db_column='approvalnotes', default='', max_length=3000)),
                ('version', olympia.versions.fields.VersionStringField(default='0.1', max_length=255)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('human_review_date', models.DateTimeField(null=True)),
                ('deleted', models.BooleanField(default=False)),
                ('source', models.FileField(blank=True, max_length=255, null=True, storage=olympia.versions.models.source_upload_storage, upload_to=olympia.versions.models.source_upload_path)),
                ('channel', models.IntegerField(choices=[(1, 'Unlisted'), (2, 'Listed')], default=2)),
                ('git_hash', models.CharField(blank=True, max_length=40)),
                ('addon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='addons.addon')),
                ('license', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='versions.license')),
                ('release_notes', olympia.translations.fields.PurifiedField(blank=True, db_column='releasenotes', max_length=3000, null=True, on_delete=django.db.models.deletion.SET_NULL, require_locale=True, short=False, to='translations.PurifiedTranslation', to_field='id', unique=True)),
            ],
            options={
                'db_table': 'versions',
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
                'base_manager_name': 'unfiltered',
            },
            bases=(olympia.amo.models.OnChangeMixin, olympia.amo.models.SaveUpdateMixin, models.Model),
            managers=[
                ('unfiltered', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='VersionProvenance',
            fields=[
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='versions.version')),
                ('source', models.PositiveSmallIntegerField(choices=[(1, 'Developer Hub'), (2, 'Signing API'), (3, 'Add-on API'), (4, 'Automatically generated by AMO')])),
                ('client_info', models.CharField(default=None, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InstallOrigin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('origin', models.CharField(max_length=255)),
                ('base_domain', models.CharField(max_length=255)),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='versions.version')),
            ],
            options={
                'get_latest_by': 'created',
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=(olympia.amo.models.SaveUpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ApplicationsVersions',
            fields=[
                ('id', olympia.amo.fields.PositiveAutoField(primary_key=True, serialize=False)),
                ('application', models.PositiveIntegerField(choices=[(1, 'Firefox'), (61, 'Firefox for Android')], db_column='application_id')),
                ('originated_from', models.PositiveSmallIntegerField(choices=[(0, 'Unknown'), (1, 'Automatically determined'), (5, 'Automatically set by a migration'), (2, 'Set by developer through devhub or API'), (3, 'Set in the manifest (gecko key)'), (4, 'Set in the manifest (gecko_android key)')], default=0, null=True)),
                ('max', models.ForeignKey(db_column='max', on_delete=django.db.models.deletion.CASCADE, related_name='max_set', to='applications.appversion')),
                ('min', models.ForeignKey(db_column='min', on_delete=django.db.models.deletion.CASCADE, related_name='min_set', to='applications.appversion')),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='apps', to='versions.version')),
            ],
            options={
                'db_table': 'applications_versions',
            },
        ),
        migrations.CreateModel(
            name='VersionReviewerFlags',
            fields=[
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('version', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='reviewerflags', serialize=False, to='versions.version')),
                ('needs_human_review_by_mad', models.BooleanField(db_index=True, default=False)),
                ('pending_rejection', models.DateTimeField(blank=True, db_index=True, default=None, null=True)),
                ('pending_content_rejection', models.BooleanField(null=True)),
                ('pending_rejection_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('pending_resolution_cinder_jobs', models.ManyToManyField(related_name='pending_rejections', to='abuse.cinderjob')),
            ],
            bases=(olympia.amo.models.SaveUpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='VersionPreview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('position', models.IntegerField(default=0)),
                ('sizes', models.JSONField(default=dict)),
                ('colors', models.JSONField(default=None, null=True)),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='previews', to='versions.version')),
            ],
            options={
                'db_table': 'version_previews',
                'ordering': ('position', 'created'),
                'indexes': [olympia.amo.models.LongNameIndex(fields=['version'], name='version_previews_version_id_fk_versions_id'), models.Index(fields=['version', 'position', 'created'], name='version_position_created_idx')],
            },
            bases=(olympia.amo.models.BasePreview, olympia.amo.models.SaveUpdateMixin, models.Model),
        ),
        migrations.AddIndex(
            model_name='version',
            index=models.Index(fields=['addon'], name='addon_id'),
        ),
        migrations.AddIndex(
            model_name='version',
            index=models.Index(fields=['license'], name='license_id'),
        ),
        migrations.AddIndex(
            model_name='version',
            index=models.Index(fields=['due_date'], name='versions_due_date_b9c73ed7'),
        ),
        migrations.AddConstraint(
            model_name='version',
            constraint=models.UniqueConstraint(fields=('addon', 'version'), name='versions_addon_id_version_5a2e75b6_uniq'),
        ),
        migrations.AddIndex(
            model_name='license',
            index=models.Index(fields=['builtin'], name='builtin_idx'),
        ),
        migrations.AddConstraint(
            model_name='applicationsversions',
            constraint=models.UniqueConstraint(fields=('application', 'version'), name='application_id'),
        ),
        migrations.AddConstraint(
            model_name='versionreviewerflags',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('pending_content_rejection__isnull', True), ('pending_rejection__isnull', True), ('pending_rejection_by__isnull', True)), models.Q(('pending_content_rejection__isnull', False), ('pending_rejection__isnull', False), ('pending_rejection_by__isnull', False)), _connector='OR'), name='pending_rejection_all_none'),
        ),
    ]

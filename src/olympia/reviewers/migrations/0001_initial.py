# Generated by Django 4.2.13 on 2024-06-11 09:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import olympia.amo.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('versions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('abuse', '0004_initial'),
        ('addons', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AutoApprovalSummary',
            fields=[
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('version', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='versions.version')),
                ('is_locked', models.BooleanField(default=False, help_text='Is locked by a reviewer')),
                ('has_auto_approval_disabled', models.BooleanField(default=False, help_text='Has auto-approval disabled/delayed flag set')),
                ('is_promoted_prereview', models.BooleanField(default=False, help_text='Is in a promoted add-on group that requires pre-review', null=True)),
                ('should_be_delayed', models.BooleanField(default=False, help_text="Delayed because it's the first listed version")),
                ('is_blocked', models.BooleanField(default=False, help_text='Version string and guid match a blocklist Block')),
                ('verdict', models.PositiveSmallIntegerField(choices=[(0, 'Would have been auto-approved (dry-run mode was in effect)'), (1, 'Would *not* have been auto-approved (dry-run mode was in effect)'), (2, 'Was auto-approved'), (3, 'Was *not* auto-approved')], default=3)),
                ('weight', models.IntegerField(default=0)),
                ('metadata_weight', models.IntegerField(default=0)),
                ('code_weight', models.IntegerField(default=0)),
                ('weight_info', models.JSONField(default=dict, null=True)),
                ('confirmed', models.BooleanField(default=None, null=True)),
                ('score', models.PositiveSmallIntegerField(default=None, null=True)),
            ],
            options={
                'db_table': 'editors_autoapprovalsummary',
            },
            bases=(olympia.amo.models.SaveUpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='UsageTier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('slug', models.CharField(help_text='Slug to help retrieve the UsageTier instance in our code.', max_length=255, null=True, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('lower_adu_threshold', models.IntegerField(blank=True, default=None, null=True)),
                ('upper_adu_threshold', models.IntegerField(blank=True, default=None, null=True)),
                ('growth_threshold_before_flagging', models.IntegerField(blank=True, default=None, help_text='Usage growth percentage threshold before we start automatically flagging the add-on for human review.', null=True)),
                ('abuse_reports_ratio_threshold_before_flagging', models.IntegerField(blank=True, default=None, help_text='Percentage threshold of ratio between abuse reports over the past 2 weeks to add-on usage before we start automatically flagging the add-on for human review.', null=True)),
            ],
            options={
                'ordering': ('upper_adu_threshold',),
            },
            bases=(olympia.amo.models.SaveUpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Whiteboard',
            fields=[
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('addon', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='addons.addon')),
                ('private', models.TextField(blank=True, max_length=100000)),
                ('public', models.TextField(blank=True, max_length=100000)),
            ],
            options={
                'db_table': 'review_whiteboard',
            },
            bases=(olympia.amo.models.SaveUpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ReviewerSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('channel', models.PositiveSmallIntegerField(choices=[(1, 'Unlisted'), (2, 'Listed')])),
                ('addon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='addons.addon')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'editor_subscriptions',
            },
            bases=(olympia.amo.models.SaveUpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ReviewActionReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Is available to be used in reviews')),
                ('name', models.CharField(max_length=255)),
                ('canned_response', models.TextField(blank=True)),
                ('canned_block_reason', models.TextField(blank=True)),
                ('addon_type', models.PositiveIntegerField(choices=[(0, 'All'), (1, 'Extension'), (10, 'Theme')], default=0)),
                ('cinder_policy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='abuse.cinderpolicy')),
            ],
            options={
                'ordering': ('name',),
            },
            bases=(olympia.amo.models.SaveUpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='NeedsHumanReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('reason', models.SmallIntegerField(choices=[(0, 'Unknown'), (1, 'Hit scanner rule'), (2, 'Belongs to a promoted group'), (3, 'Over growth threshold for usage tier'), (4, 'Previous version in channel had needs human review set'), (5, 'Sources provided while pending rejection'), (6, 'Developer replied'), (7, 'Manually set as needing human review by a reviewer'), (8, 'Auto-approved but still had an approval delay set in the past'), (9, 'Over abuse reports threshold for usage tier'), (10, 'Escalated for an abuse report, via cinder'), (11, 'Reported for abuse within the add-on'), (12, "Appeal of a reviewer's decision about a policy violation")], default=0, editable=False)),
                ('is_active', models.BooleanField(default=True)),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='versions.version')),
            ],
            options={
                'get_latest_by': 'created',
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=(olympia.amo.models.SaveUpdateMixin, models.Model),
        ),
    ]
